<UserControl x:Class="ControlSystemsLibrary.Controls.AdminTabItemContents.NomenclatureATI"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ControlSystemsLibrary.Controls.AdminTabItemContents"
             mc:Ignorable="d" 
             x:Name="Nom"
             d:DesignHeight="900" d:DesignWidth="1440" PreviewKeyDown="Nom_PreviewKeyDown">
    <UserControl.Resources>
        <!--Стиль DataGrid-->
        <!--#region DataGrid-->

        <Style x:Key="ColumnHeaderStyle1" TargetType="DataGridColumnHeader">
            <EventSetter Event="MouseDoubleClick" Handler="DG_Header_DoubleClick"/>
            <!--Стиль для области заголовка-->
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="White"/>

            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource Light-005}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource Dark-003}"/>
                </Setter.Value>
            </Setter>
            <Setter Property="SelectiveScrollingGrid.AllowDrop" Value="False"/>
            <Setter Property="FontSize" Value="13" />
            <Setter Property="FontFamily" Value="/ControlSystemsLibrary;component/Resources/Fonts/#Roboto Condensed"/>
            <Setter Property="DataGridColumnHeader.SeparatorBrush" Value="Yellow"/>
            <Setter Property="SeparatorVisibility" Value="Visible" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <!--<Setter Property="HorizontalContentAlignment" Value="Center"/>-->
            <Setter Property="Padding" Value="10,0,0,0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ToolTip" Value="Click to sort."/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGridRow">
            <EventSetter Event="MouseDoubleClick" Handler="Row_DoubleClick"/>
            <EventSetter Event="PreviewKeyDown" Handler="DataGridRow_PreviewKeyDown"/>

            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{StaticResource Light-002}"/>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" >
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Light-003}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="FontWeight"  Value="Bold" />
                    <Setter Property="Background" >
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Light-001}"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGridCell">
            <Style.Setters>

                <!--<Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Light-001}"/>
                    </Setter.Value>
                </Setter>-->
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource Dark-003}"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="FontFamily" Value="/ControlSystemsLibrary;component/Resources/Fonts/#Roboto Condensed"/>
                <Setter Property="FontSize" Value="12.667"/>
                <Setter Property="FontStyle" Value="Normal"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Grid Background="{TemplateBinding Background}">
                                <ContentPresenter VerticalAlignment="Center" Margin="7,0,0,0"/>
                                <!--Выравнивание текста в ячейках по вертикали-->
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <!--<Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center"/>-->
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="DataGridCell.IsSelected" Value="True">
                    <Setter Property="Background" >
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Light-003}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Foreground">
                        <Setter.Value>
                            <SolidColorBrush Color="{DynamicResource Blue-004}"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="BorderBrush" Value="Transparent"/>


                </Trigger>
            </Style.Triggers>
        </Style>





        <Style TargetType="DataGrid" x:Key="NomenDG">
            <!-- Make the border and grid lines a little less imposing -->


            <Setter Property="BorderBrush" Value="Red">
                <!--<Setter.Value>
                <SolidColorBrush Color="{DynamicResource Red-001}"/>
            </Setter.Value>-->
            </Setter>

            <!--Цвет границ вокруг-->
            <Setter Property="BorderThickness" Value="0"/>
            <!--Толшина границ-->
            <Setter Property="HorizontalGridLinesBrush" >
                <Setter.Value>
                    <SolidColorBrush Color="{DynamicResource Light-004}"/>
                </Setter.Value>
            </Setter>

            <!--Цвет горизонтальных линий-->
            <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>


            <Setter Property="VerticalGridLinesBrush" Value="Transparent"/>
            <!--Цвет вертикальных линий-->
            <Setter Property="RowHeaderWidth" Value="0"/>
            <!--Ширина области заголовка строк-->
            <!--<Setter Property="ColumnHeaderHeight" Value="30"/>-->
            <!--Высота области заголовка столбцов-->
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle1}"/>
            <!--Привязка стиля заголовка ()-->

            <Setter Property="Background" Value="White"/>

            <!--Цвет заднего фона (прозрачный)-->
            <Setter Property="RowBackground" Value="Transparent"/>
            <!--Цвет строки-->
            <Setter Property="AlternatingRowBackground" Value="Transparent"/>

            <!--Цвет строки через одну строку-->

            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <Setter Property="SelectionMode" Value="Extended"/>


            <!--Метод выбора строки(целая строка или отдельная ячейка)-->
            <Setter Property="CanUserSortColumns" Value="False"/>
            <!--******************** Сортировка ******************** -->
            <!--Разрещение(Запрет) на фильрацию-->
            <Setter Property="ColumnWidth" Value="*"/>
            <Setter Property="RowHeight" Value="35"/>
            <!--Высота строк-->

            <!--<Setter Property="RowStyle">
                -->
            <!--Стиль строк-->
            <!--
                <Setter.Value>
                    <Style TargetType="DataGridRow">
                        <Style.Triggers>
                            -->
            <!-- Highlight a grid row as the mouse passes over -->
            <!--
                            <Trigger Property="IsMouseOver" Value="True">
                                -->
            <!--<Setter Property="FontWeight"  Value="Bold" />-->
            <!--
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <SolidColorBrush Color="{DynamicResource Light-002}"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Setter.Value>
            </Setter>-->


            <Setter Property="CellStyle">
                <Setter.Value>
                    <Style TargetType="DataGridCell">
                        <Style.Triggers>

                            <!-- Highlight selected rows -->

                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="LightBlue" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="#ff66ccff" />
                                <Setter Property="BorderBrush" Value="Black" />
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </Style.Triggers>

                        <!-- Add some padding around the contents of a cell -->

                        <Setter Property="Padding" Value="4,3,4,3" />
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="DataGridCell">
                                    <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="FocusVisualStyle">
                            <Setter.Value>
                                <Style TargetType="Control">
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Style>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion -->
        <!--Стиль DataGrid-->





    </UserControl.Resources>













    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.Background>
            <SolidColorBrush Color="{DynamicResource Light-002}"/>
        </Grid.Background>
        <Border>
            <Border.Background>
                <SolidColorBrush Color="{DynamicResource Light-002}"/>
            </Border.Background>
            <Grid Margin="15,20,10,20">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">
                    <Button Content="Создать" Style="{DynamicResource ButtonStyle-001}" Height="32" Padding="10,1" BorderBrush="{x:Null}" BorderThickness="0" FontFamily="/ControlSystemsLibrary;component/Resources/Fonts/#Roboto" Foreground="White" Width="120">
                        <Button.Background>
                            <SolidColorBrush Color="{DynamicResource Blue-001}"/>
                        </Button.Background>
                    </Button>
                    <ContentControl Content="{Binding LoaderUC, ElementName=Nom, UpdateSourceTrigger=PropertyChanged}" Margin="10,0,0,0"/>
                    <TextBlock Text="{Binding GroupID, ElementName=Nom, UpdateSourceTrigger=PropertyChanged}" Margin="10,0,0,0" FontFamily="/ControlSystemsLibrary;component/Resources/Fonts/#Roboto Condensed" FontSize="13" VerticalAlignment="Center">
                        <TextBlock.Foreground>
                            <SolidColorBrush Color="{DynamicResource Blue-004}"/>
                        </TextBlock.Foreground>
                    </TextBlock>
                </StackPanel>
            </Grid>
        </Border>
        <DataGrid x:Name="DataGridNomenclatures" Style="{DynamicResource NomenDG}" BorderThickness="0,1,0,0" SelectionUnit="FullRow" SelectionMode="Extended" AutoGenerateColumns="False"  CanUserAddRows="False" PreviewKeyDown="DataGridNomenclatures_PreviewKeyDown" Loaded="DataGridNomenclatures_Loaded" Margin="0" Grid.Row="1">
            <DataGrid.Background>
                <SolidColorBrush Color="{DynamicResource Light-002}"/>
            </DataGrid.Background>
            <DataGrid.BorderBrush>
                <SolidColorBrush Color="{DynamicResource Light-005}"/>
            </DataGrid.BorderBrush>
            <DataGrid.Columns>

                <DataGridTextColumn Header="ID" Visibility="Hidden" Width="auto" Binding="{Binding ID}"/>

                <!--Столбец CheckBox-->
                <DataGridTemplateColumn Width="40"  MinWidth="40" CanUserResize="False">

                    <DataGridTemplateColumn.Header>
                        <CheckBox x:Name="MainSelectorCheckBox" Style="{DynamicResource NoTextCircleCheckBoxStyle}" Checked="Select" Unchecked="Select" BorderThickness="1" Width="17" Height="17" Cursor="Hand" Margin="5,0,0,0" >
                            <CheckBox.Background>
                                <SolidColorBrush Color="{DynamicResource Blue-004}"/>
                            </CheckBox.Background>
                            <CheckBox.Foreground>
                                <SolidColorBrush Color="{DynamicResource Blue-004}"/>
                            </CheckBox.Foreground>
                            <CheckBox.BorderBrush>
                                <SolidColorBrush Color="{DynamicResource Light-005}"/>
                            </CheckBox.BorderBrush>
                        </CheckBox>
                    </DataGridTemplateColumn.Header>

                    <DataGridTemplateColumn.CellTemplate >
                        <DataTemplate >
                            <CheckBox IsChecked="{Binding Selected, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource NoTextCircleCheckBoxStyle}" Checked="Select" Unchecked="Select" BorderThickness="1" Width="15" Height="15" Cursor="Hand">
                                <CheckBox.Background>
                                    <SolidColorBrush Color="{DynamicResource Blue-004}"/>
                                </CheckBox.Background>
                                <CheckBox.Foreground>
                                    <SolidColorBrush Color="{DynamicResource Blue-004}"/>
                                </CheckBox.Foreground>
                                <CheckBox.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource Light-005}"/>
                                </CheckBox.BorderBrush>
                            </CheckBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>

                </DataGridTemplateColumn>


                <!--Столбец Иконка-->
                <DataGridTemplateColumn Width="auto" IsReadOnly="True" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Margin="0,0,4,0">
                                <ContentControl Margin="0,0,0,0" Content="{Binding Icon}" Width="16" Height="16"/>
                                <Rectangle Height="2" VerticalAlignment="Bottom" Visibility="{Binding CutIconVisibility}" Margin="0,2,0,0">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{DynamicResource Red-001}"/>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>


                <!--Столбец Название-->
                <DataGridTextColumn Header="Наименование" Width="5*" IsReadOnly="True" Binding="{Binding Name}" CanUserResize="False"/>



                <!--Столбец Артикул-->
                <DataGridTextColumn Header="Артикул" Width="2*" MinWidth="70" IsReadOnly="True" Binding="{Binding Article}" CanUserResize="False"/>


                <!--Столбец Вес базовой единицы-->
                <DataGridTextColumn Width="2*" Header="Вес базовой единицы" IsReadOnly="True" Binding="{Binding WeightBaseUnitShow}" CanUserResize="False"/>


                <!--Столбец Базовая единица-->
                <DataGridTextColumn Width="2*" Header="Базовая единица" IsReadOnly="True" Binding="{Binding BaseUnit}" CanUserResize="False"/>

                <!--Столбец Штрих код-->
                <DataGridTextColumn Width="2*" Header="Штрих код" IsReadOnly="True" Binding="{Binding Barcode}" CanUserResize="False"/>



                <!--Столбец Страна происхождения-->
                <DataGridTextColumn Width="2*" Header="Страна происхождения" IsReadOnly="True" Binding="{Binding CountryOfOrigin}" CanUserResize="False"/>

                <!--Столбец Метки-->
                <DataGridTemplateColumn Width="Auto" Header="Метки" IsReadOnly="True" MinWidth="50" CanUserResize="False">
                    <DataGridTemplateColumn.CellTemplate  >
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Visibility="{Binding TagVisibility}">
                                <CheckBox x:Name="TagAksia" Style="{DynamicResource GiftCheckBoxStyle}" Margin="0,0,25,0" Cursor="Hand"  IsChecked="{Binding Aksia, UpdateSourceTrigger=PropertyChanged}" Click="UpdateTagsClick" />
                                <CheckBox x:Name="TagFocus" Style="{DynamicResource FocusCheckBoxStyle}" Margin="0,0,25,0" Cursor="Hand"  IsChecked="{Binding Focus, UpdateSourceTrigger=PropertyChanged}" Click="UpdateTagsClick" />
                                <CheckBox x:Name="TagNew" Style="{DynamicResource NewCheckBoxStyle}" Margin="0,0,35,0" Cursor="Hand"  IsChecked="{Binding New, UpdateSourceTrigger=PropertyChanged}" Click="UpdateTagsClick" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>

        </DataGrid>
        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1" Margin="0,0,0,100">
            <TextBlock Text="{Binding MessageText, ElementName=Nom, UpdateSourceTrigger=PropertyChanged}" Foreground="{Binding MessageTextColor, ElementName=Nom, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap" MaxWidth="250" FontFamily="/ControlSystemsLibrary;component/Resources/Fonts/#Roboto" FontSize="13" Margin="0,10,0,0" TextAlignment="Center"/>
        </StackPanel>
    </Grid>
</UserControl>
